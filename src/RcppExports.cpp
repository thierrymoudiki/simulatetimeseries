// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// meboot_approx
NumericVector meboot_approx(NumericVector p, int n, NumericVector z, NumericVector desintxb);
RcppExport SEXP _simulatetimeseries_meboot_approx(SEXP pSEXP, SEXP nSEXP, SEXP zSEXP, SEXP desintxbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type desintxb(desintxbSEXP);
    rcpp_result_gen = Rcpp::wrap(meboot_approx(p, n, z, desintxb));
    return rcpp_result_gen;
END_RCPP
}
// meboot_part_rcpp
NumericMatrix meboot_part_rcpp(NumericVector x, int reps, NumericVector z, double xmin, double xmax, NumericVector desintxb, bool reachbnd);
RcppExport SEXP _simulatetimeseries_meboot_part_rcpp(SEXP xSEXP, SEXP repsSEXP, SEXP zSEXP, SEXP xminSEXP, SEXP xmaxSEXP, SEXP desintxbSEXP, SEXP reachbndSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type reps(repsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type xmin(xminSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type desintxb(desintxbSEXP);
    Rcpp::traits::input_parameter< bool >::type reachbnd(reachbndSEXP);
    rcpp_result_gen = Rcpp::wrap(meboot_part_rcpp(x, reps, z, xmin, xmax, desintxb, reachbnd));
    return rcpp_result_gen;
END_RCPP
}
// expand_sd_rcpp
NumericMatrix expand_sd_rcpp(NumericVector x, NumericMatrix ensemble, double fiv, double elbow, bool force_clt);
RcppExport SEXP _simulatetimeseries_expand_sd_rcpp(SEXP xSEXP, SEXP ensembleSEXP, SEXP fivSEXP, SEXP elbowSEXP, SEXP force_cltSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ensemble(ensembleSEXP);
    Rcpp::traits::input_parameter< double >::type fiv(fivSEXP);
    Rcpp::traits::input_parameter< double >::type elbow(elbowSEXP);
    Rcpp::traits::input_parameter< bool >::type force_clt(force_cltSEXP);
    rcpp_result_gen = Rcpp::wrap(expand_sd_rcpp(x, ensemble, fiv, elbow, force_clt));
    return rcpp_result_gen;
END_RCPP
}
// expand_sd_rcpp_fast
NumericMatrix expand_sd_rcpp_fast(NumericVector x, NumericMatrix ensemble, double fiv, double elbow);
RcppExport SEXP _simulatetimeseries_expand_sd_rcpp_fast(SEXP xSEXP, SEXP ensembleSEXP, SEXP fivSEXP, SEXP elbowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ensemble(ensembleSEXP);
    Rcpp::traits::input_parameter< double >::type fiv(fivSEXP);
    Rcpp::traits::input_parameter< double >::type elbow(elbowSEXP);
    rcpp_result_gen = Rcpp::wrap(expand_sd_rcpp_fast(x, ensemble, fiv, elbow));
    return rcpp_result_gen;
END_RCPP
}
// simpson_integral_cpp
double simpson_integral_cpp(NumericVector x, NumericVector y);
RcppExport SEXP _simulatetimeseries_simpson_integral_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(simpson_integral_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_simulatetimeseries_meboot_approx", (DL_FUNC) &_simulatetimeseries_meboot_approx, 4},
    {"_simulatetimeseries_meboot_part_rcpp", (DL_FUNC) &_simulatetimeseries_meboot_part_rcpp, 7},
    {"_simulatetimeseries_expand_sd_rcpp", (DL_FUNC) &_simulatetimeseries_expand_sd_rcpp, 5},
    {"_simulatetimeseries_expand_sd_rcpp_fast", (DL_FUNC) &_simulatetimeseries_expand_sd_rcpp_fast, 4},
    {"_simulatetimeseries_simpson_integral_cpp", (DL_FUNC) &_simulatetimeseries_simpson_integral_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_simulatetimeseries(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
